{"name":"credit_score","id":0,"deploy":true,"expand":false,"depcfg":{"buckets":[{"alias":"credit_bucket","bucket_name":"default"}],"http":[{"port":"8080","root_uri_path":"/credit_score/","secure_port":"18080"}],"queue":[{"alias":"order_queue","endpoint":"127.0.0.1:6379","provider":"redis","queue_name":"credit_score"}],"source":{"source_bucket":"default"},"workspace":{"metadata_bucket":"eventing"}},"handlers":"function OnUpdate(doc, meta) {\n  log(\"doc meta id: \", meta.key, meta.expiry);\n\n  if (meta.type === \"json\" \u0026\u0026 doc.ssn) {\n    log(\"doc.ssn field: \", doc.ssn);\n\n    updated_doc = CalculateCreditScore(doc)\n    credit_bucket[meta.key] = updated_doc;\n\n    var value = credit_bucket[meta.key];\n\n    //delete credit_bucket[meta.key];\n\n    registerCallback(\"ExpiryCallbackFunc\", meta.key, meta.expiry);\n    enqueue(order_queue, meta.key);\n  }\n}\n\nfunction ExpirationCallbackFunc(doc_id) {\n    log(\"DocID recieved by callback: \", doc_id);\n}\n\nfunction OnDelete(msg) {\n  var bucket = \"beer-sample\";\n  var limit = 5;\n  var type = \"brewery\";\n\n  var n1qlResult = n1ql(\"select ${bucket}.name from ${bucket} where ${bucket}.type == '${type}' limit ${limit}\");\n  var n1qlResultLength = n1qlResult.length;\n  for (i = 0; i \u003c n1qlResultLength; i++) {\n      log(\"OnDelete: n1ql query response row: \", n1qlResult[i]);\n  }\n}\n\nfunction OnHTTPGet(req, res) {\n  var bucket = \"beer-sample\";\n\n  if (req.path === \"get_beer_count\") {\n\n    var n1qlResult = n1ql(\"select count(*) from ${bucket}\");\n    res.body.beer_sample_count = n1qlResult;\n\n  } else if (req.path === \"get_breweries_in_sf\") {\n\n    var city = \"San Francisco\";\n    var n1qlResult = n1ql(\"select count(*) from ${bucket} where ${bucket}.city == '${city}'\");\n    res.body.breweries_sf_count = n1qlResult;\n\n  } else if (req.path === \"get_brewery_in_cali\") {\n\n      var state = \"California\";\n      var limit = 1;\n      var n1qlResult = n1ql(\"select * from ${bucket} where ${bucket}.state == '${state}' limit ${limit};\");\n      res.body.brewery_in_cali = n1qlResult;\n      res.body.query_outpt_row_count = n1qlResult.length;\n\n  }\n}\n\nfunction OnHTTPPost(req, res) {\n\n  if (req.path === \"book_tickets\") {\n\n    var user_id = req.params.user_id;\n    var src_city = req.params.src;\n    var dst_city = req.params.dst;\n\n    var booking_id = \"book_\" + (Math.floor(Math.random() * 10000) + 10).toString();\n    var booking_blob = {\"booking_id\": booking_id, \"src_city\": src_city,\n                        \"dst_city\": dst_city, \"user_id\": user_id};\n\n    credit_bucket[booking_id] = booking_blob;\n\n    var user_blob = credit_bucket[user_id];\n    user_blob.booking_ids.push(booking_id);\n\n    credit_bucket[user_id] = user_blob;\n\n    res.body.booking_id = booking_id;\n    res.body.user_id = user_id;\n  }\n}\n\nfunction CalculateCreditScore(doc) {\n  var credit_score = 500;\n\n  if (doc.credit_limit_used/doc.total_credit_limit \u003c 0.3) {\n      credit_score = credit_score + 20;\n  } else {\n      doc.credit_score = doc.credit_score -\n                        Math.floor((doc.credit_limit_used/doc.total_credit_limit) * 20);\n  }\n\n  if (doc.missed_emi_payments !== 0) {\n      credit_score = credit_score - doc.missed_emi_payments * 30;\n  }\n\n  if (credit_score \u003c 300) {\n      doc.credit_score = 300;\n  } else {\n      doc.credit_score = credit_score;\n  }\n\n  return doc;\n}","assets":[{"id":0,"mimeType":"image/png;base64","name":"1.png"}]}