{"name":"travel_itinerary","id":1,"deploy":true,"expand":true,"depcfg":"{\n   \"buckets\" : [\n      {\n         \"bucket_name\" : \"default\",\n         \"alias\" : \"credit_bucket\"\n      }\n   ],\n   \"queue\" : [\n      {\n         \"provider\" : \"redis\",\n         \"queue_name\": \"order_queue\",\n         \"endpoint\" : \"127.0.0.1:6379\",\n         \"alias\" : \"order_queue\"\n      }\n   ],\n   \"http\": [\n      {\n          \"port\": \"8081\",\n          \"root_uri_path\": \"/travel_sample/\",\n          \"secure_port\": \"18081\"\n      }\n  ],\n  \"workspace\": {\n    \"metadata_bucket\": \"eventing\"\n      }\n}","handlers":"function OnUpdate(doc, meta) {\n  log(\"doc meta id: \", meta.key);\n\n  if (meta.type === \"json\" && doc.ssn) {\n    log(\"doc.ssn field: \", doc.ssn);\n\n    updated_doc = CalculateCreditScore(doc)\n    credit_bucket[meta.key] = updated_doc;\n\n    var value = credit_bucket[meta.key];\n\n    //delete credit_bucket[meta.key];\n\n    var d = new Date();\n    var n = ISODateString(d);\n    log(\"ISO 8601: \", n);\n\n    registerCallback(\"CallbackFunc1\", meta.key, n);\n    enqueue(order_queue, meta.key);\n  }\n}\n\nfunction CallbackFunc1(doc_id) {\n    log(\"DocID recieved by callback: \", doc_id);\n}\n\nfunction OnDelete(msg) {\n  var bucket = \"beer-sample\";\n  var limit = 5;\n  var type = \"brewery\";\n\n  var n1qlResult = n1ql(\"select ${bucket}.name from ${bucket} where ${bucket}.type == '${type}' limit ${limit}\");\n  var n1qlResultLength = n1qlResult.length;\n  for (i = 0; i < n1qlResultLength; i++) {\n      log(\"OnDelete: n1ql query response row: \", n1qlResult[i]);\n  }\n}\n\nfunction OnHTTPGet(req, res) {\n  var bucket = \"beer-sample\";\n\n  if (req.path === \"get_beer_count\") {\n\n    var n1qlResult = n1ql(\"select count(*) from ${bucket}\");\n    res[\"beer_sample_count\"] = n1qlResult;\n\n  } else if (req.path === \"get_breweries_in_sf\") {\n\n    var city = \"San Francisco\";\n    var n1qlResult = n1ql(\"select count(*) from ${bucket} where ${bucket}.city == '${city}'\");\n    res.breweries_sf_count = n1qlResult;\n\n  } else if (req.path === \"get_brewery_in_cali\") {\n\n      var state = \"California\";\n      var limit = 1;\n      var n1qlResult = n1ql(\"select * from ${bucket} where ${bucket}.state == '${state}' limit ${limit};\");\n      res.brewery_in_cali = n1qlResult;\n      res.query_outpt_row_count = n1qlResult.length;\n\n  } else {\n      res.http_status_code = 404;\n  }\n}\n\nfunction OnHTTPPost(req, res) {\n\n  if (req.path === \"book_tickets\") {\n\n    var user_id = req.params.user_id;\n    var src_city = req.params.src;\n    var dst_city = req.params.dst;\n\n    var booking_id = \"book_\" + (Math.floor(Math.random() * 10000) + 10).toString();\n    var booking_blob = {\"booking_id\": booking_id, \"src_city\": src_city,\n                        \"dst_city\": dst_city, \"user_id\": user_id};\n\n    credit_bucket[booking_id] = booking_blob;\n\n    var user_blob = credit_bucket[user_id];\n    user_blob.booking_ids.push(booking_id);\n\n    credit_bucket[user_id] = user_blob;\n\n    res.booking_id = booking_id;\n    res.user_id = user_id;\n  }\n\n}\n\nfunction OnTimerEvent() {\n\n}\n\nfunction CalculateCreditScore(doc) {\n  var credit_score = 500;\n\n  if (doc.credit_limit_used/doc.total_credit_limit < 0.3) {\n      credit_score = credit_score + 20;\n  } else {\n      doc.credit_score = doc.credit_score -\n                        Math.floor((doc.credit_limit_used/doc.total_credit_limit) * 20);\n  }\n\n  if (doc.missed_emi_payments !== 0) {\n      credit_score = credit_score - doc.missed_emi_payments * 30;\n  }\n\n  if (credit_score < 300) {\n      doc.credit_score = 300;\n  } else {\n      doc.credit_score = credit_score;\n  }\n\n  return doc;\n}"}